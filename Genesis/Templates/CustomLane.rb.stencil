platform :ios do
  desc "swiftlint analyzeの実行"
  lane :swiftlint_analyze do |options|
    environment = get_valid_environment(options[:environment] || "development")
    scheme = environment["scheme"]
    format = false
    if options[:format] == nil or options[:format] == true
      format = true
    end
    Dir.chdir("..") do
      sh("rm", "-rf", "./buildlog")
    end
    clear_derived_data
    scan(
{% if use_cocoapods %}
      workspace: "#{PROJECT_NAME}.xcworkspace",
{% else %}
      project: "#{PROJECT_NAME}.xcodeproj",
{% endif %}
      scheme: scheme,
      clean: true,
      build_for_testing: true,
      buildlog_path: "./buildlog",
      configuration: "Debug",
      skip_slack: true,
    )
    swiftlint(
      mode: :analyze,
      compiler_log_path: "./buildlog/#{PROJECT_NAME}-#{scheme}.log",
      executable: %x( mint which swiftlint ).strip,
      quiet: true,
      format: format,
    )
  end

  private_lane :export_app do |options|
    configuration = options[:configuration] || "Debug"
    export_method = options[:export_method] || "development"
    export_team_id = options[:export_team_id] || TEAM_ID
    environment = options[:environment]
    scheme = environment["scheme"]

    profiles = {
      environment["bundle_identifier"] => "#{environment["bundle_identifier"]} Development",
    }

    if options[:export_method]
      export_method = options[:export_method]
      if export_method == "app-store"
        development = false
        profiles = {
          environment["bundle_identifier"] => "#{environment["bundle_identifier"]} AppStore",
        }
      end
    end

    gym(
{% if use_cocoapods %}
      workspace: "#{PROJECT_NAME}.xcworkspace",
{% else %}
      project: "#{PROJECT_NAME}.xcodeproj",
{% endif %}
      configuration: configuration,
      scheme: scheme,
      clean: true,
      silent: false,
      export_method: export_method,
      export_team_id: export_team_id,
      export_options: {
        provisioningProfiles: profiles,
      },
      output_directory: "build/",
      buildlog_path: "build/",
    )
  end
end